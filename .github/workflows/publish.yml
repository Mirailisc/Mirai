# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Publish

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3.1.0

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.11.0

      - uses: actions/setup-node@v3.5.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test
        run: pnpm run test

  build-netlify:
    name: Building for Netlify
    needs: [test]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3.1.0

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.11.0

      - uses: actions/setup-node@v3.5.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build --if-present

      - name: Netlify Actions
        uses: nwtgck/actions-netlify@v1.2.3
        with:
          publish-dir: "./build"
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 5

  publish:
    name: Publish Release Version
    needs: [test, build-netlify]
    if: ${{ github.ref == 'refs/heads/main'}}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.1.0

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.11.0

      - uses: actions/setup-node@v3.5.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Release
        run: pnpm run semantic-release

  webhook:
    name: Discord Webhook
    needs: [test, build-netlify, publish]
    runs-on: ubuntu-latest

    steps:
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: "The project `{{ EVENT_PAYLOAD.repository.full_name }}` has been deployed."
